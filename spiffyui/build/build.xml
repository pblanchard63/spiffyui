<?xml version="1.0" encoding="UTF-8"?>
<project name="Spiffy UI" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:artifact="antlib:org.apache.maven.artifact.ant" default="spiffy" basedir="..">
    <target name="spiffy" depends="setup,resolve">
        <antcall target="compile"/>
        <antcall target="js-lint" />
        <antcall target="js-min" />
        <antcall target="css-min" />
        <antcall target="javadoc-all"/>
        <antcall target="javadoc"/>
        <antcall target="javadoc-tasks"/>
        <antcall target="package" />
        <antcall target="install-snapshot" />
        <antcall target="maven-plugin" />
    </target>
    
    <target name="resolve" description="--> retrieve dependencies with ivy" unless="build.from.maven" depends="ivySettings">
        <property name="ivy.lib.dir" value="${spiffy.root}/lib"/>
        <ivy:retrieve file="${spiffy.root}/ivy.xml" log="download-only" />
        
        <subant antfile="build2.xml"
                buildpath="${spiffy.root}/build/">
            <property name="spiffy.root" value="${spiffy.root}"/>
        </subant>
    </target>
    
    <target name="ivySettings" description="--> Setup ivy settings" unless="build.from.maven">
        <ivy:settings file="${spiffy.build}/ivysettings.xml" />
    </target>
    
    <target name="clearcache" description="Clear the Apache Ivy cache" depends="setup,ivySettings" unless="build.from.maven">
        <ivy:cleancache />
    </target>
    
    <target name="setup" unless="spiffy.hasSetup">
        <property environment="env"/>
        <property name="spiffy.hasSetup" value="true" />

        <!-- These are all the project relative paths.  Please add new paths
             here so they are easier to find when they change. -->
        <condition property="build.spiffy.base" value="${env.SPIFFY_BASE}" else="${basedir}">
          <isset property="${env.SPIFFY_BASE}"/>
        </condition>
        
        <condition property="ivy.default.ivy.user.dir" 
                   value="${env.spiffy_ivy_dir}">
          <isset property="env.spiffy_ivy_dir"/>
        </condition>
        
        <!-- Establish a "run from maven" property so that conditional logic
    	     can be added when out-of-the box ant does not work in the same way
    	     as maven-antrun-plugin -->
    	<condition property="build.javac.fork" value="${build.from.maven}" else="false">
          <isset property="build.from.maven"/>
        </condition>
        
        <echo message="Spffy UI base directory: ${build.spiffy.base}" />
        <property name="spiffy.root" location="${build.spiffy.base}"/>
        <property name="spiffy.build" location="${build.spiffy.base}/build"/>
        <property name="spiffy.dist" location="${build.spiffy.base}/dist"/>
        <property name="spiffy.build.lib" location="${build.spiffy.base}/build/lib"/>
        <property name="spiffy.build.classes" location="${build.spiffy.base}/build/classes"/>
        
        <property name="spiffy.www"  location="${build.spiffy.base}/target/dist"/>
        <property name="spiffy.classes"  location="${build.spiffy.base}/target/classes"/>

        <property name="spiffyui.plugin.version" value="1.4-SNAPSHOT"/>
        <property name="spiffyui.plugin.path" value="${spiffy.root}/build/maven/maven-spiffyui-plugin"/>
        
        <mkdir dir="${spiffy.www}"/>
        <mkdir dir="${spiffy.classes}"/>
        <mkdir dir="${spiffy.dist}"/>
        <property name="spiffy.js"  location="${build.spiffy.base}/src/main/js"/>
        <property name="spiffy.css"  location="${build.spiffy.base}/src/main/css"/>
        
        <property name="gwt.compiler.output" value="OBF"/>
        
        <property name="ant.home" location="${build.rpt.base}/external/ant"/>
        <property name="ant.lib" location="${build.rpt.base}/external/ant/lib"/>
    </target>
    
    <target name="checkstyle.compile.check">
        <condition property="is.compiled" else="is.not.compiled">
            <available file="${spiffy.classes}"/>
        </condition>
    </target>
    
    <target name="checkstyle.nocompileError" if="is.not.compiled">
        <fail message="You must compile before you run Checkstyle" />
    </target>

    <target name="checkstyle" depends="setup,resolve,checkstyle.compile.check,checkstyle.nocompileError">
        <taskdef resource="checkstyletask.properties">
            <classpath>
                <fileset dir="${spiffy.build}/lib" includes="*.jar"/>
            </classpath>
        </taskdef>

        <!-- Spiffy UI makes all Checkstyle warnings into build errors.  That
             means the build will fail if there are any Checkstyle errors in 
             any of the source files in this application or the Spiffy UI framework.
        -->
        <checkstyle config="${spiffy.build}/checkstyle_checks.xml" failOnViolation="true">
            <formatter type="plain"/>
            <formatter type="xml" toFile="checkstyle_errors.xml"/>

            <fileset dir="${spiffy.root}" excludes="${checkstyle.ignore.files},**/*Rsrc*,**/*Strings.java,**/target/**" includes="**/*.java" />
            <!-- Specify a base dir to make the output a bit more readable -->
            <property key="checkstyle.basedir" value="${spiffy.root}" />
            
            <classpath>
                <pathelement location="${spiffy.classes}"/>
                <fileset dir="${spiffy.build}/lib" includes="*.jar"/>
            </classpath>
        </checkstyle>
    </target>

    <target name="compile">
        <!-- Compile all the Java -->
        <javac
        srcdir="${spiffy.root}/src/main/java" destdir="${spiffy.classes}"
               target="1.5" source="1.5" debug="true" deprecation="yes"
               includeantruntime="false">
            <compilerarg value="-Xlint" />
            <classpath>
                <fileset dir="${spiffy.root}/build/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="${spiffy.root}/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement path="${java.class.path}"/>
            </classpath>
        </javac>
        
        <antcall target="checkstyle" />
    </target>
    
    <!--  The compile Ant task. -->
    <target name="compileAntTask" depends="setup">
        <mkdir dir="${spiffy.build.classes}"/>
        <javac srcdir="${spiffy.build}/src" destdir="${spiffy.build.classes}" target="1.5" 
                    includes="org/spiffyui/build/**"
                    source="1.5" debug="true" deprecation="yes" includeantruntime="false"
        	        fork="${build.javac.fork}">
            <compilerarg value="-Xlint" />
            <classpath>
                <fileset dir="${spiffy.build}/lib" includes="*.jar"/>
                <pathelement path="${java.class.path}"/>
                <!-- Adding this so that maven builds will include the necessary ant dependencies -->
                <pathelement path="${compile_classpath}"/>
            </classpath>
        </javac>
        
        <jar destfile="${spiffy.dist}/spiffytasks.jar">
            <zipfileset dir="${spiffy.build.classes}" prefix="" >
                <include name="org/spiffyui/build/*.*"/>
            </zipfileset>
            <zipfileset dir="${spiffy.build}/src" prefix="" >
                <include name="tasks.properties"/>
            </zipfileset>
        </jar>
    </target>

    <target name="install-anttask" depends="init-maven,compileAntTask">
        <artifact:pom id="pom-tasks" file="${spiffy.root}/build/pom-tasks.xml" />
        
        <artifact:install file="${spiffy.dist}/spiffytasks.jar">
            <pom refid="pom-tasks"/>
            <localRepository path="${maven.lib.dir}" />
        </artifact:install>
    </target>

    <target name="maven-plugin" depends="init-maven,install-anttask">
        <artifact:mvn mavenVersion="3.0.2"
                      pom="${spiffy.build}/maven/maven-spiffyui-plugin/pom.xml">
            <arg value="install"/>
            <localRepository path="${maven.lib.dir}" />
        </artifact:mvn>
        
        <artifact:mvn mavenVersion="3.0.2"
                      pom="${spiffy.build}/maven/maven-spiffyui-plugin/pom.xml">
            <arg value="site"/>
            <localRepository path="${maven.lib.dir}" />
        </artifact:mvn>
    </target>

    <target name="taskdefs">
        <taskdef resource="tasks.properties">
            <classpath>
                <fileset dir="${spiffy.dist}" includes="*.jar"/>
                <fileset dir="${spiffy.build}/lib" includes="*.jar"/>
            </classpath>
        </taskdef>
    </target>
    
    <target name="js-min" description="Minimize the JavaScript with the Closure compiler" depends="setup,js-lint,compileAntTask,taskdefs">
        <!-- Now we compile our JavaScript.  We are compiling all the different
             pieces of the JavaScript frameworks we use along with our JavaScript
             to create a single file.  We need to specify the files for JQuery UI
             in a specific order since they have loading dependencies. -->
        <closure jsfile="${spiffy.www}/spiffyui.min.js" 
                 closurejar="${spiffy.build}/lib/closure-compiler-v20130227.jar"
                 compilationLevel="SIMPLE_OPTIMIZATIONS"
                 warninglevel="DEFAULT">
            <fileset dir="${spiffy.js}" includes="**/jquery.ui.core.js" />
            <fileset dir="${spiffy.js}" includes="**/jquery.ui.widget.js" />
            <fileset dir="${spiffy.js}" includes="**/jquery.effects.core.js" />
            <fileset dir="${spiffy.js}" includes="**/jquery.ui.mouse.js" />
            
            <fileset dir="${spiffy.js}" includes="**/amplify.store.js" />
            <fileset dir="${spiffy.js}" includes="**/history.adapter.jquery.js" />
            <fileset dir="${spiffy.js}" includes="**/history.js" />
            <fileset dir="${spiffy.js}" includes="**/history.html4.js" />
            
            <fileset dir="${spiffy.js}" includes="**/*.js" 
                     excludes="**/jquery.min.js, **/jquery-2.*.js, **/unittest/**, **/lib/i18n/**, **/jquery.ui.core.js, **/jquery.ui.widget.js, **/jquery.effects.core.js, **/jquery.ui.mouse.js, **/history*.js, **/amplify*.js, **/json2.js" />
        </closure>

        <!-- Then we GZIP it for web servers that support GZIP -->
        <gzip src="${spiffy.www}/spiffyui.min.js" destfile="${spiffy.www}/spiffyui.min.js.gz"/>
        
        <!-- Then we GZIP JQuery for web servers that support GZIP -->
        <gzip src="${spiffy.www}/jquery.min.js" destfile="${spiffy.www}/jquery.min.js.gz"/>


        <copy todir="${spiffy.www}">
             <fileset dir="${spiffy.js}/lib" includes="jquery.min.js" />
        </copy>
        
        <!-- We copy over all the JavaScript files for dev mode -->
        <mkdir dir="${spiffy.www}/js"/>
        <copy todir="${spiffy.www}/js">
            <fileset dir="${spiffy.js}" includes="**/*" />
        </copy>
        
        <gziplist dest="${spiffy.www}/js/lib/i18n">
            <!-- The Croatian date file has something strange in it.
                 I'm not really sure why, but we'll exclude it from 
                 the GZIP list for now. -->
            <fileset dir="${spiffy.js}/lib/i18n" includes="*.js" />
        </gziplist>
        
    </target>
    
    <target name="css-min" description="Minimize the CSS with the YUI compiler" depends="setup">
        <concat destfile="${spiffy.www}/spiffyui.css" force="yes">
            <!-- Since Cascading Style Sheets cascade the order is important here.  We need to make sure
                  That we load in the right order so different styles can be overwriten. -->
            <fileset dir="${spiffy.js}" includes="**/*.css" />
            <fileset dir="${spiffy.css}" includes="*.css" excludes="spiffyui.ie.css" />
        </concat>

        <java classname="com.yahoo.platform.yui.compressor.Bootstrap"
            fork="true" failonerror="true" maxmemory="256m">
            <arg value="-o"/>
            <arg value="${spiffy.www}/spiffyui.min.css"/>
            <arg value="${spiffy.www}/spiffyui.css"/>
            <classpath>
                <fileset dir="${spiffy.build}/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement path="${java.class.path}"/>
                <!-- Adding this so that maven builds will include the necessary ant dependencies -->
                <pathelement path="${compile_classpath}"/>
            </classpath>
        </java>

        <!-- Now that we have created the compressed file we don't
             need the concatenated file -->
        <delete file="${spiffy.www}/spiffyui.css" />

        <!-- Then we can GZIP the file -->
        <gzip src="${spiffy.www}/spiffyui.min.css" destfile="${spiffy.www}/spiffyui.min.css.gz"/>
        
        <!-- Now we copy over the images that we use for our CSS -->
        <mkdir dir="${spiffy.www}/images"/>
        <copy todir="${spiffy.www}/images">
            <fileset dir="${spiffy.css}/images" includes="**/*" />
        </copy>
        
        <copy todir="${spiffy.www}">
            <fileset dir="${spiffy.css}" includes="*.css" />
        </copy>
    </target>
    
    <!-- Run JSLINT against our JavaScript -->
    <target name="js-lint">
        <taskdef name="jslint" classname="com.googlecode.jslint4java.ant.JSLintTask">
            <classpath>
                <fileset dir="${spiffy.build}/lib">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </taskdef>
        
        <jslint>
            <formatter type="plain" />
            <fileset dir="${spiffy.js}" includes="**/*.js" excludes="**/jquery.min.js,**/jquery-2.*.js, **/lib/**,**/unittest/**" />
        </jslint>
    </target>
    
    <target name="spiffy.clean" depends="setup,init-maven">
        <delete dir="${spiffy.www}"/>
        <delete dir="${spiffy.classes}"/>
        <delete dir="${spiffy.dist}"/>
        <delete dir="${spiffy.build}/classes"/>
        <delete failonerror="false">
            <fileset dir="${spiffy.build}/lib" includes="*.jar"/>
        </delete>
        <delete dir="${spiffy.root}/lib"/>
        <delete dir="${spiffy.root}/target"/>
        <delete file="${spiffy.root}/checkstyle_errors.xml"/>
	    <artifact:mvn mavenVersion="3.0.2"
		      pom="${spiffy.build}/maven/maven-spiffyui-plugin/pom.xml">
          <arg value="clean"/>
	</artifact:mvn>
    </target>
    
    <target name="javadoc" description="Generate JavaDoc for the Spiffy UI framework">
        <mkdir dir="${spiffy.classes}/javadoc"/>
        
        <javadoc destdir="${spiffy.classes}/javadoc"
                 author="false"
                 version="true"
                 use="true"
                 windowtitle="Spiffy UI Framework API">
            <packageset dir="${spiffy.root}/src/main/java" defaultexcludes="yes">
                <include name="org/spiffyui/**"/>
            </packageset>
        </javadoc>
    </target>
    
    <target name="javadoc-all" description="Generate JavaDoc for this project">
        <mkdir dir="${spiffy.classes}/javadoc-all"/>
        
        <javadoc destdir="${spiffy.classes}/javadoc-all"
                 author="false"
                 version="true"
                 use="true"
                 windowtitle="Spiffy UI Framework API">
            <Header><![CDATA[<a href="/" target="_top">Spiffy UI 
                        Framework</a>]]></Header>                  
            <packageset dir="${spiffy.root}/src/main/java" defaultexcludes="yes">
                <include name="org/spiffyui/**"/>
            </packageset>
            <packageset dir="${spiffy.root}/build/src/" defaultexcludes="yes">
                <include name="org/spiffyui/**"/>
            </packageset>
            <packageset dir="${spiffy.root}/build/maven/maven-spiffyui-plugin/src/main/java" defaultexcludes="yes">
                <include name="org/spiffyui/**"/>
            </packageset>
        </javadoc>
    </target>
    
    <target name="javadoc-tasks" description="Generate JavaDoc for this project">
        <mkdir dir="${spiffy.classes}/javadoc-tasks"/>
        
        <javadoc destdir="${spiffy.classes}/javadoc-tasks"
                 author="false"
                 version="true"
                 use="true"
                 windowtitle="Spiffy UI Framework Ant Tasks">
            <packageset dir="${spiffy.root}/build/src/" defaultexcludes="yes">
                <include name="org/spiffyui/**"/>
            </packageset>
        </javadoc>
    </target>

    <target name="package" depends="setup">
        <jar destfile="${spiffy.dist}/spiffyui.jar">
            <zipfileset dir="${spiffy.classes}" prefix="" >
                <include name="**/*.*"/>
            </zipfileset>
            <zipfileset dir="${spiffy.www}" prefix="org/spiffyui/public" >
                <include name="**/*.*"/>
            </zipfileset>
            <zipfileset dir="${spiffy.root}/src/main/java" prefix="" >
                <include name="**/*.*"/>
            </zipfileset>
        </jar>
        
        <jar destfile="${spiffy.dist}/spiffyui-source.jar">
            <zipfileset dir="${spiffy.root}/src/main/java" prefix="" >
                <include name="**/*.*"/>
            </zipfileset>
            
            <zipfileset dir="${spiffy.root}/src/main/css" prefix="" >
                <include name="**/*.*"/>
            </zipfileset>
            
            <zipfileset dir="${spiffy.root}/src/main/js" prefix="" >
                <include name="**/*.*"/>
            </zipfileset>
        </jar>
        
        <jar destfile="${spiffy.dist}/spiffyui-javadoc.jar">
            <zipfileset dir="${spiffy.classes}/javadoc" prefix="" >
                <include name="**/*.*"/>
            </zipfileset>
        </jar>
        
        <jar destfile="${spiffy.dist}/spiffytasks-javadoc.jar">
            <zipfileset dir="${spiffy.classes}/javadoc-tasks" prefix="" >
                <include name="**/*.*"/>
            </zipfileset>
        </jar>
        
        <jar destfile="${spiffy.dist}/spiffytasks-source.jar">
            <zipfileset dir="${spiffy.root}/build/src/" prefix="" >
                <include name="**/*.*"/>
            </zipfileset>
        </jar>
    </target>

    <property name="maven.install.version" value="2.1.3" />
    <condition property="ant.extra.home" value="${env.ANT_EXTRA_HOME}">
      <isset property="env.ANT_EXTRA_HOME" />
    </condition>
    <property name="ant.extra.home" value="${user.home}/.ant" />
    <property name="maven.jar.dir" value="${ant.extra.home}/lib" />
    <property name="maven.jar.file" value="${maven.jar.dir}/maven-ant-tasks.jar" />
    <condition property="maven.settings" value="${env.MVN_SETTINGS}">
      <isset property="env.MVN_SETTINGS" />
    </condition>
    <property name="maven.settings" value="${user.home}/.m2/settings.xml" />
    
    <target name="download-maven" unless="hasDownloadedMaven">
        <property name="hasDownloadedMaven" value="true" />
        <mkdir dir="${maven.jar.dir}"/>
        <!-- download maven-ant-tasks from web site so that it can be used even without any special installation -->
        <get src="http://repo2.maven.org/maven2/org/apache/maven/maven-ant-tasks/${maven.install.version}/maven-ant-tasks-${maven.install.version}.jar"
             dest="${maven.jar.file}" usetimestamp="true" />
    </target>

    <target name="init-maven" depends="download-maven">
        <condition property="maven.lib.dir" 
                   value="${env.spiffy_maven_dir}">
          <isset property="env.spiffy_maven_dir"/>
        </condition>
        
        <property name="maven.lib.dir" value="${user.home}/.m2" />

      <!-- try to load maven-ant-tasks here from ant-extra-home, in case the user has not already dropped
              it into ant's lib dir (note that the latter copy will always take precedence).
              We will not fail as long as local lib dir exists (it may be empty) and
              ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="maven.lib.path">
            <fileset dir="${maven.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/maven/artifact/ant/antlib.xml"
                 uri="antlib:org.apache.maven.artifact.ant" classpathref="maven.lib.path"/>
    </target>

    <target name="deploy-snapshot" description="Deploy project artifacts to the spiffyui Sonatype repository" depends="setup,init-maven,package">
        <!--    deploy spiffytasks.jar -->
        <artifact:mvn mavenVersion="3.0.2" pom="${spiffy.root}/build/pom-tasks.xml">
            <arg value="deploy:deploy-file"/>
            <arg value="-Dfile=${spiffy.dist}/spiffytasks.jar"/>
            <arg value="-DpomFile=${spiffy.root}/build/pom-tasks.xml"/>
            <arg value="-DrepositoryId=sonatype-nexus-snapshots"/>
            <arg value="-Dsources=${spiffy.dist}/spiffytasks-source.jar"/>
            <arg value="-Djavadoc=${spiffy.dist}/spiffytasks-javadoc.jar"/>
            <arg value="-Durl=https://oss.sonatype.org/content/repositories/snapshots/"/>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
        </artifact:mvn>
        <!--    deploy spiffyui.jar -->
        <artifact:mvn mavenVersion="3.0.2" pom="${spiffy.root}/build/pom.xml">
            <arg value="deploy:deploy-file"/>
            <arg value="-Dfile=${spiffy.dist}/spiffyui.jar"/>
            <arg value="-DpomFile=${spiffy.root}/build/pom.xml"/>
            <arg value="-DrepositoryId=sonatype-nexus-snapshots"/>
            <arg value="-Dsources=${spiffy.dist}/spiffyui-source.jar"/>
            <arg value="-Djavadoc=${spiffy.dist}/spiffyui-javadoc.jar"/>
            <arg value="-Durl=https://oss.sonatype.org/content/repositories/snapshots/"/>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
        </artifact:mvn>
        <!--    deploy maven-spiffyui-plugin -->
        <artifact:mvn mavenVersion="3.0.2" pom="${spiffy.root}/build/maven/maven-spiffyui-plugin/pom.xml">
            <arg value="deploy"/>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
        </artifact:mvn>

    </target>
    
    <target name="install-snapshot" description="Install project artifacts to the local repository" depends="setup,init-maven,package">
        <!--    deploy spiffytasks.jar -->
        <artifact:mvn mavenVersion="3.0.2" pom="${spiffy.root}/build/pom-tasks.xml">
            <arg value="install:install-file"/>
            <arg value="-Dfile=${spiffy.dist}/spiffytasks.jar"/>
            <arg value="-DpomFile=${spiffy.root}/build/pom-tasks.xml"/>
            <arg value="-Dsources=${spiffy.dist}/spiffytasks-source.jar"/>
            <arg value="-Djavadoc=${spiffy.dist}/spiffytasks-javadoc.jar"/>
            <arg value="-Durl=https://oss.sonatype.org/content/repositories/snapshots/"/>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
        </artifact:mvn>
        <!--    deploy spiffyui.jar -->
        <artifact:mvn mavenVersion="3.0.2" pom="${spiffy.root}/build/pom.xml">
            <arg value="install:install-file"/>
            <arg value="-Dfile=${spiffy.dist}/spiffyui.jar"/>
            <arg value="-DpomFile=${spiffy.root}/build/pom.xml"/>
            <arg value="-Dsources=${spiffy.dist}/spiffyui-source.jar"/>
            <arg value="-Djavadoc=${spiffy.dist}/spiffyui-javadoc.jar"/>
            <arg value="-Durl=https://oss.sonatype.org/content/repositories/snapshots/"/>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
        </artifact:mvn>
    </target>

    <target name="deploy-staging" description="Sign and Deploy artifacts to the spiffyui Sonatype release staging repository, ready for maven central syncing" depends="setup,init-maven,package">
        <!--  sign and deploy spiffytasks main artifact -->
        <artifact:mvn>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.2:sign-and-deploy-file"/>
            <arg value="-Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2"/>
            <arg value="-DrepositoryId=sonatype-nexus-staging"/>
            <arg value="-DpomFile=${spiffy.root}/build/pom-tasks.xml"/>
            <arg value="-Dfile=${spiffy.dist}/spiffytasks.jar"/>
            <arg value="-Pgpg"/>
        </artifact:mvn>
        <!--  sign and deploy spiffytasks javadoc artifact -->
        <artifact:mvn>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.2:sign-and-deploy-file"/>
            <arg value="-Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2"/>
            <arg value="-DrepositoryId=sonatype-nexus-staging"/>
            <arg value="-DpomFile=${spiffy.root}/build/pom-tasks.xml"/>
            <arg value="-Dfile=${spiffy.dist}/spiffytasks-javadoc.jar"/>
            <arg value="-Dclassifier=javadoc"/>
            <arg value="-Pgpg"/>
        </artifact:mvn>
        <!--  sign and deploy spiffytasks sources artifact -->
        <artifact:mvn>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.2:sign-and-deploy-file"/>
            <arg value="-Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2"/>
            <arg value="-DrepositoryId=sonatype-nexus-staging"/>
            <arg value="-DpomFile=${spiffy.root}/build/pom-tasks.xml"/>
            <arg value="-Dfile=${spiffy.dist}/spiffytasks-source.jar"/>
            <arg value="-Dclassifier=sources"/>
            <arg value="-Pgpg"/>
        </artifact:mvn>
        <!--  sign and deploy spiffyui main artifact -->
        <artifact:mvn>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.2:sign-and-deploy-file"/>
            <arg value="-Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2"/>
            <arg value="-DrepositoryId=sonatype-nexus-staging"/>
            <arg value="-DpomFile=${spiffy.root}/build/pom.xml"/>
            <arg value="-Dfile=${spiffy.dist}/spiffyui.jar"/>
            <arg value="-Pgpg"/>
        </artifact:mvn>
        <!--  sign and deploy spiffyui javadoc artifact -->
        <artifact:mvn>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.2:sign-and-deploy-file"/>
            <arg value="-Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2"/>
            <arg value="-DrepositoryId=sonatype-nexus-staging"/>
            <arg value="-DpomFile=${spiffy.root}/build/pom.xml"/>
            <arg value="-Dfile=${spiffy.dist}/spiffyui-javadoc.jar"/>
            <arg value="-Dclassifier=javadoc"/>
            <arg value="-Pgpg"/>
        </artifact:mvn>
        <!--  sign and deploy spiffyui sources artifact -->
        <artifact:mvn>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.2:sign-and-deploy-file"/>
            <arg value="-Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2"/>
            <arg value="-DrepositoryId=sonatype-nexus-staging"/>
            <arg value="-DpomFile=${spiffy.root}/build/pom.xml"/>
            <arg value="-Dfile=${spiffy.dist}/spiffyui-source.jar"/>
            <arg value="-Dclassifier=sources"/>
            <arg value="-Pgpg"/>
        </artifact:mvn>
        <!--  sign and deploy maven-spiffyui-plugin main artifact -->
        <artifact:mvn>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.2:sign-and-deploy-file"/>
            <arg value="-Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2"/>
            <arg value="-DrepositoryId=sonatype-nexus-staging"/>
            <arg value="-DpomFile=${spiffyui.plugin.path}/pom.xml"/>
            <arg value="-Dfile=${spiffyui.plugin.path}/target/maven-spiffyui-plugin-${spiffyui.plugin.version}.jar"/>
            <arg value="-Pgpg"/>
        </artifact:mvn>
        <!--  sign and deploy maven-spiffyui-plugin javadoc artifact -->
        <artifact:mvn>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.2:sign-and-deploy-file"/>
            <arg value="-Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2"/>
            <arg value="-DrepositoryId=sonatype-nexus-staging"/>
            <arg value="-DpomFile=${spiffyui.plugin.path}/pom.xml"/>
            <arg value="-Dfile=${spiffyui.plugin.path}/target/maven-spiffyui-plugin-${spiffyui.plugin.version}-javadoc.jar"/>
            <arg value="-Dclassifier=javadoc"/>
            <arg value="-Pgpg"/>
        </artifact:mvn>
        <!--  sign and deploy maven-spiffyui-plugin sources artifact -->
        <artifact:mvn>
            <arg value="--settings"/>
            <arg value="${maven.settings}"/>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.2:sign-and-deploy-file"/>
            <arg value="-Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2"/>
            <arg value="-DrepositoryId=sonatype-nexus-staging"/>
            <arg value="-DpomFile=${spiffyui.plugin.path}/pom.xml"/>
            <arg value="-Dfile=${spiffyui.plugin.path}/target/maven-spiffyui-plugin-${spiffyui.plugin.version}-sources.jar"/>
            <arg value="-Dclassifier=sources"/>
            <arg value="-Pgpg"/>
        </artifact:mvn>
    </target>

</project>


